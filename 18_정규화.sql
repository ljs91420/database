-- 18_정규화.sql

/*
    # 정규화
    
        - 테이블의 컬럼을 지정할 때 지켜야 하는 규칙
        - 무질서한 컬럼들의 단순한 나열을 테이블화시키는 것을 말한다.
        - 정규화를 지키지 않은 테이블은 여러 귀찮은 문제들에 시달리게 된다.
        
    # 제1정규화(1NF)
    
        - 각 컬럼이 한 컬럼당 하나의 값만 가지도록 설계해야 한다.
          (각 컬럼이 원자값을 가지는 상태를 '1NF를 만족했다'라고 얘기한다.)
        - 제1정규화를 만족시키지 못한 테이블은 여러 가지 이상 현상이 발생하게 된다.
          (삽입 이상, 삭제 이상, 갱신 이상)
        
        ex) 1NF를 만족시키지 못한 테이블
        
            < 커피 테이블 >
            메뉴 이름 / 가격       / 크기     / 온도
            아메리카노  1500, 2000   T, V, R    H, I   
            
            갱신 이상 - 아메리카노의 가격을 1700원으로 바꾸고 싶다면
            UPDATE coffee SET price = 1700 WHERE cname = '아메리카노';
            UPDATE coffee SET price = '1700,2000' WHERE cname = '아메리카노'; -- 귀찮다.
            
        ex) 1NF를 해소하여 모든 테이블이 원자값을 지니게 하게 만들어보기
            
            < 커피 테이블 >
            메뉴 이름       / 기본 가격
            아메리카노(HOT)   1500
            
            < 커피 주문 테이블 >
            주문번호(PK) / 커피이름(FK) / 크기(FK) / 온도(FK) / 영수증번호(FK)
            1             아메리카노      T          H         1
            2             카페라떼        V          I         1
            
            < 크기 테이블 >
            크기(PK) / 가격
            T          0
            R          300
            V          500
            
            < 온도 테이블 >
            온도(PK) / 가격
            H          0
            I          500
            
    # 제2정규화(2NF)
    
        - 제1정규화를 마친 결과물에서 부분 함수 종속을 제거하여 완전 함수 종속을 만족하도록 바꾸는 것
        - 부분 함수 종속 : 해당 테이블에 존재하는 다른 후보키에 의해 다른 컬럼값까지 이미 결정되어 버리는 것
    
        * 1NF 하기 전
        < 커피 테이블 >
        메뉴 이름 / 가격       / 크기     / 온도
        아메리카노  1500, 2000   T, V, R    H, I   
    
        * 1NF를 거친 후 (1NF : 모든 컬럼이 원자값을 가지도록 변화시키는 것)
        < 커피 테이블 >
        메뉴이름    / 가격 / 크기 / 온도
        아메리카노    1500   T      H
        아메리카노    2000   T      I
        아메리카노    1800   R      H
        아메리카노    2300   R      I
        아메리카노    2000   V      H
        아메리카노    2500   V      I
        
        - 크기에 의해서 가격이 고정적으로 결정되는 부분이 있다.
        - 온도에 의해서 가격이 고정적으로 결정되는 부분이 있다.
        - 이 상태로 쓰면 JOIN을 덜 해서 성능이 좋긴 하다.(정규화가 항상 정답은 아니다)
        
        * 2NF를 거친 후 (1NF의 결과물에서 부분 함수 종속을 제거)
        
        < 커피 테이블 >
        메뉴 이름       / 기본 가격
        아메리카노(HOT)   1500
            
        < 크기 테이블 >
        크기(PK) / 가격
        T          0
        R          300
        V          500
            
        < 온도 테이블 >
        온도(PK) / 가격
        H          0
        I          500
            
        - 나누고 보니 커피, 온도, 크기는 모두 다대다 관계에서 중계 테이블이 필요하여 추가함
        
        < 커피 주문 테이블 >
        주문번호(PK) / 커피이름(FK) / 크기(FK) / 온도(FK) / 영수증번호(FK)
        1             아메리카노      T          H         1
        2             카페라떼        V          I         1
*/

/*
    < 멤버쉽 >
    
    이름 / 전화번호 / 등급   / 할인율 / 보유 포인트 / 사용 가능 매장
    김철수 010-       VIP      30%     3000         식당, 카페, 주유소
    이미나 010-       SILVER   10%     1234         식당
    강호동 010-       GOLD     20%     44444        식당, 카페
    
    < 멤버쉽 회원 >
    이름 / 전화번호 / 등급(FK) / 보유 포인트
    김철수 010-       VIP       3000
    
    < 멤버쉽 등급 >
    등급(PK) / 할인율
    VIP        30%
    
    < 멤버쉽 별 방문 가능 매장 테이블 >
    등급(FK) / 매장 타입(FK) / 
    VIP       식당
    VIP       카페
    VIP       주유소
    GOLD      식당
    GOLD      카페
    SILVER    식당
    BRONZE    식당
    
    < 매장 >
    매장 이름(PK) / 매장 타입(FK)
    홍콩반점        식당
    새마을식당      식당
    역전우동        식당
    
    < 체인점 >
    체인점 이름(PK)  /  매장 이름(FK) / 주소 / 전화번호 / 평점
    홍콩반점 노원점     홍콩반점
    홍콩반점 건대입구점 홍콩반점
    
    < 후기 >
    후기ID / 평점 / 내용 / 체인점 이름(FK)
    1        4.7   맛있음 홍콩반점 노원점
    
    < 사용할 수 있는 매장 타입들 >
    매장 타입(PK)
    식당
    카페
    주유소
    빵집
    의류
*/